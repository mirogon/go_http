// Code generated by MockGen. DO NOT EDIT.
// Source: httprequestsender.go

// Package mock_http_ is a generated GoMock package.
package mock_http_

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHttpRequestSender is a mock of HttpRequestSender interface.
type MockHttpRequestSender struct {
	ctrl     *gomock.Controller
	recorder *MockHttpRequestSenderMockRecorder
}

// MockHttpRequestSenderMockRecorder is the mock recorder for MockHttpRequestSender.
type MockHttpRequestSenderMockRecorder struct {
	mock *MockHttpRequestSender
}

// NewMockHttpRequestSender creates a new mock instance.
func NewMockHttpRequestSender(ctrl *gomock.Controller) *MockHttpRequestSender {
	mock := &MockHttpRequestSender{ctrl: ctrl}
	mock.recorder = &MockHttpRequestSenderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHttpRequestSender) EXPECT() *MockHttpRequestSenderMockRecorder {
	return m.recorder
}

// SendRequest mocks base method.
func (m *MockHttpRequestSender) SendRequest(arg0 *http.Request) (*http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendRequest", arg0)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SendRequest indicates an expected call of SendRequest.
func (mr *MockHttpRequestSenderMockRecorder) SendRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendRequest", reflect.TypeOf((*MockHttpRequestSender)(nil).SendRequest), arg0)
}
